# PyChess
## Reverse Enginnering Moves - The Problem of the Ambiguos Rook in the same File (or Rank) 

	I wake up thinking about the problem of how to identify the rook that the player is trying to move on the board. The case that bodered me was the one in which the two rooks are positioned is the same file, one behind the other, like one rook in *a1* and other in *a2*, the question is when the player try to move a rook to *a4* the movement should not be ambiguos, it is implicit that the player wants to move the rook that is in *a2*.
	But when there are two rooks in the same file, but one is let's say in a8 and the other in a1, the same movement to a4 is not obvious, so it should be disambiguated. The rank of the rook that the move is pretended should be communicated.
	The question that arose was, how to differentiate the two cases? The answer was to check whether if the rooks that intersect the same line are is differents poles or in the same poles, with the point of destiny as reference. The if they are in the same pole I should assume that the one less distant of the point of destiny is the piece that the player is trying to move, in case they are in different poles, and it could be more than 2, I should expect that the rank (or the file) of disambiguation of the player, if he did not do that than I can simply ask for it. In the case that he did that all doubts are solved.
